name: Testiranje projekta

# Ko pushamo spremembe na main se proži
on:
  push:
    branches: [main]

jobs:
  check-tests:
    runs-on: self-hosted
    steps:
      # Kloniranje repozitorija
      - name: Checkout koda
        uses: actions/checkout@v4

      # Preverimo ali imamo testne datoteke
      - name: Preveri testne datoteke
        run: |
          if ls tests/*.py 2> napaka.txt; then
            echo "Testne datoteke obstajajo."
          else
            echo "Napaka: Testne datoteke ne obstajajo!" >> napaka.txt
            exit 1
          fi

      # Napako shranimo v napaka.txt
      - name: Shranjevanje napake
        uses: actions/upload-artifact@v4
        with:
          name: napaka-artefakt
          path: napaka.txt

  run-tests:
    runs-on: self-hosted
    needs: check-tests # Tako povemo, da je ta posel odvisen od prejšnjega
    strategy:
      matrix:
        python-version: ['3.12'] # Matrika za različne verzije Pythona naložene na našem self-hosted actions strežniku
    steps:
      # Kloniranje repozitorija
      - name: Checkout koda
        uses: actions/checkout@v4

      # Naložimo artefakt napake
      - name: Prenos napake
        uses: actions/download-artifact@v4
        with:
          name: napaka-artefakt

      # Preverjanje vsebine napaka.txt
      - name: Preveri napaka.txt
        run: |
          if grep -q "Napaka" napaka.txt; then
            echo "Napaka v prvem poslu!"
            exit 1
          else
            echo "Brez napak, nadaljujem..."
          fi

      # Ustvari virtualno okolje
      - name: Ustvari virtualno okolje
        run: python${{ matrix.python-version }} -m venv venv

      # Namestitev dependencyjev
      - name: Namesti odvisnosti
        run: |
          source venv/bin/activate
          python${{ matrix.python-version }} -m pip install --upgrade pip
          python${{ matrix.python-version }} -m pip install pytest requests flask flask-cors opencv-python
          if [ -f requirements.txt ]; then python${{ matrix.python-version }} -m pip install -r requirements.txt; fi

      # Kopiranje Server mape
      - name: Pripravi Server mapo
        run: cp -r Server/* .

      # Zagon strežnika v ozadju
      - name: Zaženi strežnik
        run: |
          source venv/bin/activate
          python${{ matrix.python-version }} app.py &
          sleep 5  # Počakaj, da se strežnik zažene

      # Zagon testov
      - name: Zaženi teste
        run: |
          source venv/bin/activate
          python${{ matrix.python-version }} -m pytest tests/test_app.py
