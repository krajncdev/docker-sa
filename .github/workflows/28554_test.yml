name: Testiranje projekta

# Ko pushamo spremembe na main se proži
on:
  push:
    branches: [main]

jobs:
  check-tests:
    runs-on: self-hosted
    steps:
      # Kloniranje repozitorija
      - name: Checkout koda
        uses: actions/checkout@v4

      # Preverimo ali imamo testne datoteke
      - name: Preveri testne datoteke
        run: |
          if ls tests/*.py 2> napaka.txt; then
            echo "Testne datoteke obstajajo."
          else
            echo "Napaka: Testne datoteke ne obstajajo!" >> napaka.txt
            exit 1
          fi

      # Napako shranimo v napaka.txt
      - name: Shranjevanje napake
        uses: actions/upload-artifact@v4
        with:
          name: napaka-artefakt
          path: napaka.txt

  run-tests:
    runs-on: self-hosted
    needs: check-tests # Tako povemo, da je ta posel odvisen od prejšnjega
    strategy:
      matrix:
        python-version: ['3.10.14', '3.11.10', '3.12.4'] # Matrika za različne verzije Pythona
    steps:
      # Kloniranje repozitorija
      - name: Checkout koda
        uses: actions/checkout@v4

      # Naložimo artefakt napake
      - name: Prenos napake
        uses: actions/download-artifact@v4
        with:
          name: napaka-artefakt

      # Preverjanje vsebine napaka.txt
      - name: Preveri napaka.txt
        run: |
          if grep -q "Napaka" napaka.txt; then
            echo "Napaka v prvem poslu!"
            exit 1
          else
            echo "Brez napak, nadaljujem..."
          fi

      # Nastavitev Python okolja
      - name: Nastavi Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      # Namestitev dependencyjev
      - name: Namesti odvisnosti
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests
          pip install -r requirements.txt

      # Kopiranje Server mape
      - name: Pripravi Server mapo
        run: cp -r Server/* .

      # Zagon strežnika v ozadju
      - name: Zaženi strežnik
        run: |
          python app.py &
          sleep 5  # Počakaj, da se strežnik zažene

      # Zagon testov
      - name: Zaženi teste
        run: pytest tests/test_app.py
